{"filter":false,"title":"revenuesStat.php","tooltip":"/php/app/routes/revenuesStat.php","undoManager":{"mark":44,"position":44,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":4,"column":12},"end":{"row":4,"column":34}},"text":"entity/:entityName/:pk"},{"action":"insertText","range":{"start":{"row":4,"column":12},"end":{"row":4,"column":20}},"text":"revenues"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":20},"end":{"row":4,"column":21}},"text":"S"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":21},"end":{"row":4,"column":22}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":4,"column":21},"end":{"row":4,"column":22}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":4,"column":20},"end":{"row":4,"column":21}},"text":"S"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":12},"end":{"row":4,"column":13}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":13},"end":{"row":4,"column":14}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":14},"end":{"row":4,"column":15}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":15},"end":{"row":4,"column":16}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":16},"end":{"row":4,"column":17}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":17},"end":{"row":4,"column":18}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":4,"column":60},"end":{"row":4,"column":75}},"text":"$entityName,$pk"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":8,"column":0},"end":{"row":8,"column":4}},"text":"    "},{"action":"removeLines","range":{"start":{"row":6,"column":0},"end":{"row":8,"column":0}},"nl":"\r\n","lines":["    //$app->etag(\"/entity/{$entityName}/{$pk}\");","    //$app->expires('+1 hour');"]},{"action":"removeText","range":{"start":{"row":5,"column":4},"end":{"row":6,"column":0}},"text":"\r\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":195,"column":0},"end":{"row":195,"column":9}},"text":"        }"},{"action":"removeLines","range":{"start":{"row":8,"column":0},"end":{"row":195,"column":0}},"nl":"\r\n","lines":["        if(is_null($entitiesConfiguration)){","            throw new EntitiesNotInConfigException(); ","        }","        ","        if(!array_key_exists($entityName,$entitiesConfiguration)){","            throw new EntityNotConfiguredException(); ","        }","        ","        $entityConfiguration = $entitiesConfiguration[$entityName];","        ","        $isANewEntity = ($pk == 'new'?true:false);","        ","        $entity = NULL;","        ","        ","        if(!$isANewEntity){","            ","            $RBEntity = R::findOne($entityName, $entityConfiguration['primary_key'] . '=?', array($pk)); ","","            $entity = $RBEntity->export();","     ","        $GLOBALS['timings'][] = array('Line: ' . __LINE__ => (microtime(TRUE)-START_TIME));","            if(isset($entityConfiguration['relations'])  && is_array($entityConfiguration['relations'])){","                 foreach($entityConfiguration['relations'] as $rEntityName => $rData){","                   // if(strpos($fieldName,\"_id\") !== false) $preloadEntities[] = str_replace(\"_id\",\"\",$fieldName);","                   ","        $GLOBALS['timings'][] = array('Line: ' . __LINE__ => (microtime(TRUE)-START_TIME));","                   switch($rData['type']){","                       case 'many-to-one':","                           ","                                $RBRE = R::find($rEntityName,  $entityName . '_id =?', array($RBEntity->id)); ","                                $REA = R::beansToArray($RBRE);","                                $entity['own' . ucfirst($rEntityName)] = $REA;","                                /*","                                echo \"<pre>\";","                                print_r($REA);","                                */","                           break;","                       case 'many-to-many':","                                $RBRE = R::related($RBEntity,$rEntityName);","                                if(is_array($RBRE)){","                                    $t = reset($RBRE);","                                    if(is_object($t)){","                                        $linkTable = $t->ownGroupRate;","                                        /*","                                        echo \"<pre>\";","                                        print_r(R::beansToArray($linkTable));","                                        */","                                        ","                                        $REA = R::beansToArray($RBRE);","                                        ","                                        $entity['own' . ucfirst($rEntityName)] = $REA;","                                        /*","                                        echo \"<pre>\";","                                        print_r($REA);","                                        */","                                        /*foreach ($RBRatesEntity as $e) {","                                        ","                                            $p = $e->export();","                                            $rates[$p['id']] = $p;","                                        }*/","                                    }","                                }","                           break;","                   ","                   }","                      ","                }","            }","            ","            ","        $GLOBALS['timings'][] = array('Line: ' . __LINE__ => (microtime(TRUE)-START_TIME));","            // FARE FOREACH che se un campo ha ..._id tiro fuori la sua rappresentazione con url","            foreach ($entity as $fieldName => $fieldData) {","                ","                if(strpos($fieldName,'_id') !== false){","                    $counter = 0;  ","                    //echo $fieldName . '<br>';","                    ","                    if(is_array($fieldData) &&  !empty($fieldData)){","                        foreach ($fieldData as $id1 => $fieldData1) {","                            /*","                            echo \"<pre>\";","                            print_r($entity);","                            */","                            $counter++;     ","                            if(is_array($fieldData1) &&  !empty($fieldData1)){","                                foreach ($fieldData1 as $fieldName2 => $fieldData2) {","                                    if(strpos($fieldName2,'_id') !== false){","                                        ","                                        $relatedEntityName = strtolower(str_replace('_id','',$fieldName2));","                                        ","                                        if(is_array($fieldData2) && !empty($fieldData2)){","                                            if($relatedEntityName != $entityName){","                                                //echo '<br>relatedEntityName : ' . $relatedEntityName;","                                                if($counter == 1){","                                                    $RBRelatedEntities = R::find($relatedEntityName);","                                                    ","                                                    ","                                                    $representationsOf[$relatedEntityName] = entityRepresentation($RBRelatedEntities,$entitiesConfiguration[$relatedEntityName]);","                                                }","                                                ","                                                 $entity[$fieldName][$id1][$relatedEntityName] = '';","                                                 if(isset($fieldData2[$fieldName2]) && $fieldData2[$fieldName2] != '' && isset($representationsOf[$relatedEntityName][$fieldData2[$fieldName2]])){","                                                    $entity[$fieldName][$id1][$relatedEntityName] = $representationsOf[$relatedEntityName][$fieldData2[$fieldName2]]['representation'];","                                                 }","                                            }","                                        }","                                      }","                                }","                            }","                        }","                    }","                }","                ","        $GLOBALS['timings'][] = array('Line: ' . __LINE__ => (microtime(TRUE)-START_TIME));","                if(strpos($fieldName,'own') === 0){","                    $counter = 0;  ","                    //echo $fieldName . '<br>';","                    ","                    if(is_array($fieldData) &&  !empty($fieldData)){","                        foreach ($fieldData as $id1 => $fieldData1) {","                        ","                            if(is_array($fieldData1) &&  !empty($fieldData1)){","                                $counter++;    ","                                foreach ($fieldData1 as $fieldName2 => $fieldData2) {","                                    if(strpos($fieldName2,'_id') !== false){","                                        ","                                        $relatedEntityName = strtolower(str_replace('_id','',$fieldName2));","                                        if($relatedEntityName != $entityName){","                                            //echo '<br>fieldName2: ' . $fieldName2 . '<br>';","                                            if($counter == 1){ // CARICO LE RAPPRESENTAZIONI DELL ENTITA","                                                $RBRelatedEntities = R::find($relatedEntityName);","                                                if(is_array($RBRelatedEntities) &&  !empty($RBRelatedEntities)){","                                                    $representationsOf[$relatedEntityName] = entityRepresentation($RBRelatedEntities,$entitiesConfiguration[$relatedEntityName]);","                                                    //print_r(entityRepresentation($RBRelatedEntities,$entitiesConfiguration[$relatedEntityName]));","                                                    ","                                                }","                                            }","                                            ","                                             $entity[$fieldName][$id1][$relatedEntityName] = '';","                                             if(isset($fieldData2[$fieldName2]) && $fieldData2[$fieldName2] != '' && isset($representationsOf[$relatedEntityName][$fieldData2[$fieldName2]])){","                                                $entity[$fieldName][$id1][$relatedEntityName] = $representationsOf[$relatedEntityName][$fieldData2[$fieldName2]]['representation'];","                                             }","                                             ","                                             ","                                        }","                                    }","                                }","                            }","                          ","                        }","                    }","                }","            }","            ","            /*","            echo \"<pre>\";","            print_r($entity);","            die();","            ","            */","        $GLOBALS['timings'][] = array('Line: ' . __LINE__ => (microtime(TRUE)-START_TIME));","            /*","            echo '<pre>';","            var_dump($representationsOf);","            echo '<pre>';","            //print_r($entity);","            die();","            */","            ","            ","            ","            $app->view->appendData(array(","                'RBEntity' => $RBEntity,","                'entity' => $entity","            ));","            ","        }else{","            $get = $app->request()->get();","            if(isset($get['ED'])){","                $app->view->appendData(array(","                    'ED' => $get['ED'],","                    'isANewEntity' => $isANewEntity","                ));","            }","            "]},{"action":"removeText","range":{"start":{"row":7,"column":6},"end":{"row":7,"column":58}},"text":"  $entitiesConfiguration = $app->config('entities');"},{"action":"removeText","range":{"start":{"row":7,"column":6},"end":{"row":8,"column":0}},"text":"\r\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":19,"column":0},"end":{"row":19,"column":8}},"text":"        "},{"action":"removeLines","range":{"start":{"row":15,"column":0},"end":{"row":19,"column":0}},"nl":"\r\n","lines":["","      } catch (EntitiesNotInConfigException $e) {","        $app->response()->status(404);","        echo 'EntitiesNotInConfigException';"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":28,"column":0},"end":{"row":28,"column":5}},"text":"    )"},{"action":"removeLines","range":{"start":{"row":26,"column":0},"end":{"row":28,"column":0}},"nl":"\r\n","lines":["    'entityName' => '[a-zA-Z]{3,}',","    'pk' => '(new|\\d{1,4})',"]},{"action":"removeText","range":{"start":{"row":25,"column":2},"end":{"row":25,"column":21}},"text":"->conditions(array("},{"action":"removeText","range":{"start":{"row":25,"column":2},"end":{"row":26,"column":0}},"text":"\r\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":25,"column":2},"end":{"row":25,"column":3}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":25,"column":10},"end":{"row":25,"column":18}},"text":"entityUI"},{"action":"insertText","range":{"start":{"row":25,"column":10},"end":{"row":25,"column":11}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":25,"column":11},"end":{"row":25,"column":12}},"text":"S"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":25,"column":12},"end":{"row":25,"column":13}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":25,"column":13},"end":{"row":25,"column":14}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":25,"column":14},"end":{"row":25,"column":15}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":25,"column":10},"end":{"row":25,"column":11}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":25,"column":10},"end":{"row":25,"column":18}},"text":"revenues"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":26,"column":0},"end":{"row":82,"column":0}},"nl":"\r\n","lines":["","$app->get('/entity/:entityName', $authAdmin('admin'), function ($entityName) use ($app) {  ","    ","    try{","        $entitiesConfiguration = $app->config('entities');","        if(is_null($entitiesConfiguration)){","            throw new EntitiesNotInConfigException(); ","        }","        ","        if(!array_key_exists($entityName,$entitiesConfiguration)){","            throw new EntityNotConfiguredException(); ","        }","        ","        $entityConfiguration = $entitiesConfiguration[$entityName];","        ","        $RBEntities = R::find($entityName);","        ","        if(is_array($RBEntities)){","            //  PRELOAD","            $preloadEntities =  array();","            foreach($entityConfiguration['fields'] as $fieldName => $d){","                if(strpos($fieldName,\"_id\") !== false) $preloadEntities[] = str_replace(\"_id\",\"\",$fieldName);","            }","            ","            ","            $entities = array();","            R::preload($RBEntities,$preloadEntities);","            foreach($RBEntities as $RBEntity){","                $entities[] = $RBEntity->export();","            }","            //$entities = R::exportAll($RBEntities);","            ","            $app->view()->setData(array(","                'entityConfiguration' => $entityConfiguration,","                'entities' => $entities,","                'RBEntities' => $RBEntities","            ));","            $app->render('/entities/DefaultEntityUIList.html');","        }","","      } catch (EntitiesNotInConfigException $e) {","        $app->response()->status(404);","        echo 'EntitiesNotInConfigException';","        ","      } catch (Exception $e) {","        $app->response()->status(400);","        $app->response()->header('X-Status-Reason', $e->getMessage());","        echo \"<pre>\";","        print_r($e->getMessage());","        print_r($e->getCode());","        print_r($e->getTrace());","      }","  ","})->conditions(array(","    'entityName' => '[a-zA-Z]{3,}',","    ))->name('entityListUI');;"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":13,"column":32},"end":{"row":13,"column":47}},"text":"DefaultEntityUI"},{"action":"insertText","range":{"start":{"row":13,"column":32},"end":{"row":13,"column":44}},"text":"revenuesStat"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":14,"column":0},"end":{"row":15,"column":0}},"nl":"\r\n","lines":["        $GLOBALS['timings'][] = array('Line: ' . __LINE__ . ' End render' => (microtime(TRUE)-START_TIME));"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":13,"column":0},"end":{"row":13,"column":7}},"text":"       "},{"action":"removeLines","range":{"start":{"row":12,"column":0},"end":{"row":13,"column":0}},"nl":"\r\n","lines":["        $GLOBALS['timings'][] = array('Line: ' . __LINE__ . ' Begin render' => (microtime(TRUE)-START_TIME));"]},{"action":"removeText","range":{"start":{"row":11,"column":7},"end":{"row":11,"column":8}},"text":" "},{"action":"removeText","range":{"start":{"row":11,"column":7},"end":{"row":12,"column":0}},"text":"\r\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":11},"end":{"row":11,"column":0}},"text":"\r\n"},{"action":"insertText","range":{"start":{"row":11,"column":0},"end":{"row":11,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":12},"end":{"row":9,"column":13}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":13},"end":{"row":9,"column":14}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":28},"end":{"row":12,"column":29}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":29},"end":{"row":12,"column":30}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":30},"end":{"row":12,"column":31}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":31},"end":{"row":12,"column":32}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":32},"end":{"row":12,"column":33}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":12,"column":23},"end":{"row":12,"column":36}},"text":"entitstatsies"},{"action":"insertText","range":{"start":{"row":12,"column":23},"end":{"row":12,"column":24}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":24},"end":{"row":12,"column":25}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":25},"end":{"row":12,"column":26}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":26},"end":{"row":12,"column":27}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":12,"column":26},"end":{"row":12,"column":27}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":12,"column":25},"end":{"row":12,"column":26}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":25},"end":{"row":12,"column":26}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":26},"end":{"row":12,"column":27}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":27},"end":{"row":12,"column":28}},"text":"s"}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":11,"column":8},"end":{"row":11,"column":8},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1403329293738,"hash":"a4dbef6f28caa4439df39340a53664866e8b8011"}